@page "/contractorsdelete/{Id:int}"
@inject IContractorsService ContractorsService
@inject NavigationManager NavigationManager


<h1 style="text-align:center">Delete a Contractor</h1>
<p style="color:red;text-align:center">Are you sure you want to permanently delete this contractor? There is no undo!</p>

<table class="genform">
    <div class='form-group'>Name: @contractor.Name</div>

    <tr>
        <td colspan="2" style="text-align:center">
            <button class="btn btn-primary" @onclick="@Delete">Delete</button>
            <button class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
        </td>
    </tr>
</table>


@code {
    // Create a new, empty Contractor object
    Contractor contractor = new Contractor();

    [Parameter]
    public int Id { get; set; }

    //Executes on page open..
    protected override async Task OnInitializedAsync()
    {
        contractor = await ContractorsService.Contractors_GetOne(Id);
    }

    //Executes if user confirms the deletion.
    protected async Task Delete()
    {
        // Delete the row and go back to the list.
        // In the SProc you can set IsActive to 0 rather than physically delete.
        await ContractorsService.ContractorsDelete(Id);
        NavigationManager.NavigateTo("/contractorslist");
    }

    // Executes when user clicks the Cancel button.
    void Cancel()
    {
        NavigationManager.NavigateTo("/contractorslist");
    }
}
