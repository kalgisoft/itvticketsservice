@page "/deviceaddedit/{Id:int}"
@inject IDeviceService DeviceService
@inject IPlantService PlantService
@inject IContractorsService ContractorsService
@inject NavigationManager NavigationManager

<h1 style="text-align:center">@pagetitle</h1>

<EditForm Model="@device" OnValidSubmit="@Save" class="form-inline">
    <div class="container">

        <div class="row">
            <div class="col-12 buttons">
                <button class="btn btn-primary btn-block" @onclick="@DevImages">Device Images</button>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-12 buttons">
                <button class="btn btn-primary btn-block" @onclick="@DevInfo">Device Info</button>
            </div>
        </div>

        <br />

        <div class='row'>
            <div class='col-2'>
                <label for='Code'>Code:</label>
            </div>
            <div class='col-4'>
                <InputText @bind-Value="device.Code" class='form-control' id='Code' />
            </div>
        </div>

        <div class='row'>
            <div class='col-2'>
                <label for='Type'>Type:</label>
            </div>
            <div class='col-4'>
                <InputText @bind-Value="device.Type" class='form-control' id='Type' />
            </div>
        </div>

        <div class='row'>
            <div class='col-2'>
                <label for='Info'>Info:</label>
            </div>
            <div class='col-4'>
                <InputText @bind-Value="device.Info" class='form-control' id='Info' />
            </div>
        </div>

        <div class='row'>
            <div class='col-2'>
                <label for='Id'>Plant Owner:</label>
            </div>
            <div class='col-4'>
                <select class="form-control selectpicker" @bind="device.PlantId">
                    <option>--select plant--</option>
                    @foreach (var cmp in plants)
                    {
                        <option value="@cmp.Id">@cmp.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class='row'>
            <div class='col-2'>
                <label for='Type'>Line:</label>
            </div>
            <div class='col-4'>
                <InputNumber @bind-Value="device.NumLinea" class='form-control' id='Type' />
            </div>
        </div>

        <div class='row'>
            <div class='col-2'>
                <label for='Id'>Device Contractor:</label>
            </div>
            <div class='col-4'>
                <select class="form-control selectpicker" @bind="device.IdContractor">
                    <option>--select contractor--</option>
                    @foreach (var cntr in contractors)
                    {
                        <option value="@cntr.Id">@cntr.Name</option>
                    }
                </select>
            </div>
        </div>


        <div class="row">
            <div class="col-12 errormsg">
                <DataAnnotationsValidator />
                <ValidationSummary />
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-12 buttons">
                <button class="btn btn-primary" @onsubmit="@Save">@buttontext</button>
                <button class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    List<Plant> plants = new List<Plant>();
    List<Contractor> contractors = new List<Contractor>();

    // Create a new, empty Device object
    Device device = new Device();

    [Parameter]
    public int Id { get; set; }

    // Set default page title and button text
    public string pagetitle = "Add a Device";
    public string buttontext = "Add";

    //Executes on page open, set defaults on page.
    protected override async Task OnInitializedAsync()
    {
        plants = await PlantService.GetPlantList();
        contractors = await ContractorsService.GetContractorsList();

        // ============ If the passed-in Id is zero, assume new Plant.
        if (Id == 0)
        {
            // Use this block to set for defaults (optional)
        }
        else
        {
            device = await DeviceService.Device_GetOne(Id);
            // Change page title and button text since this is an edit.
            pagetitle = "Edit Device";
            buttontext = "Update";
        }
    }

    // Executes OnValidSubmit of EditForm above.
    protected async Task Save()
    {
        if (device.Id == 0)
        {
            // Insert if Id is zero.

            //valore di defalt, ci deve sempre essere
            device.IdContractor = 1;

            await DeviceService.DeviceInsert(device);
        }
        else
        {
            // Update if Id not 0
            await DeviceService.DeviceUpdate(device);
        }
        NavigationManager.NavigateTo("/devicelist");
    }

    //Executes if user clicks the Cancel button.
    protected void Cancel()
    {
        NavigationManager.NavigateTo("/devicelist");
    }

    // Executes OnValidSubmit of EditForm above.
    protected void DevInfo()
    {
        NavigationManager.NavigateTo("/deviceinfoaddedit/" + device.Code);
    }

    protected void DevImages()
    {
        NavigationManager.NavigateTo("/deviceimagesaddedit/" + device.Code);
    }

}