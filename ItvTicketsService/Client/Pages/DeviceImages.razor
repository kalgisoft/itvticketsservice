@page "/deviceimages/{Code}"

@inject IAzureStorageService _azureStorageService
@inject IDialogService DialogService
@using System.IO;

<div class="container-height">
    <div class="col-sm-12">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table mr-1"></i>
                Device Images
            </div>
            <div class="card-body">
                <a href="/" class="px-5"><span class="oi oi-home px-1"></span>Home</a>
                <div class=" grid grid-cols-4 grid-cols-1-sm grid-cols-2-md grid-cols-4-lg grid-cols-4-xl">
                    @foreach (var image in filesList)
                    {
                        <div class="image-container img-preview m-6 rounded overflow-hidden shadow-lg"
                             style="text-align:center">
                            <div @onclick="(() => OpenDialog(image))">
                                <img class="w-full h-48 object-cover" src="@GetImage(image)" alt="@Path.GetFileName(image)" />
                            </div>
                            <div class="">
                                <h3 class="mt-1 font-semibold text-2xl leading-tight truncate">
                                    @Path.GetFileName(image)
                                </h3>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<footer class="py-4 bg-light mt-auto">
    <div class="container-fluid">
        <div class="d-flex align-items-center justify-content-between small">
            <div class="text-muted">Sync: online/offline</div>
        </div>
    </div>
</footer>
@code {
    [Parameter]
    public string Code { get; set; }

    List<string> filesList = new List<string>();

    //Executes on page open, set defaults on page.
    protected override async Task OnInitializedAsync()
    {
        filesList = await _azureStorageService.GetContainerFileList("upload-container", Code);
    }

    private async void OpenDialog(string path)
    {
        if (path.IndexOf(".pdf") > 0)
        {
            var parameters = new DialogParameters { { "Path", path }, { "Type", "pdf" } };
            DialogOptions fullScreen = new DialogOptions() { FullScreen = true, CloseButton = true };
            DialogService.Show<ImageDialog>("Preview", parameters, fullScreen);
        }
        else
        {
            var parameters = new DialogParameters { { "Path", path }, { "Type", "image" } };
            DialogService.Show<ImageDialog>("Preview", parameters);
        }
    }

    private string GetImage(string filepath)
    {
        if (filepath.IndexOf(".pdf") > 0)
        {
            return @"/images/PDF.png";
        }
        return filepath;
    }
}
