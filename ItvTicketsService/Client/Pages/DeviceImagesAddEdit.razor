@page "/deviceimagesaddedit/{Code}"
@inject IAzureStorageService _azureStorageService
@inject IDialogService DialogService

@using System.Net.Http.Headers;
@using System.IO;
<div class="container-fluid container-height">
    <div class="col-sm-12">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table mr-1"></i>
                Add/Edit Device Images
            </div>

            <div class="card-body">
                <div class="table-responsive">
                    <div class="row no-gutters p-2">
                        <div class="col-md-12">
                            @if (ImgUrl != null)
                            {
                                <img src="@ImgUrl" class="image-preview" height="250" width="150" />
                            }
                        </div>
                    </div>
                    <div class="row no-gutters p-2">
                        <div class="col-md-12">
                            <InputFile OnChange="@OnInputFileChanged" multiple></InputFile>
                        </div>
                    </div>
                    <div class="row no-gutters p-2">
                        <div class="col-md-12">
                            <MudTable Items="@filesList" Hover="true" SortLabel="Sort By" FixedHeader="true" Height="650px">
                                <HeaderContent>
                                    <MudTh>Image</MudTh>
                                    <MudTh>File Name</MudTh>
                                    <MudTh>Delete</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Image" @onclick="@(() => OpenDialog(context))"><img src="@context" class="image-preview" width="60" height="100" /></MudTd>
                                    <MudTd DataLabel="File">@Path.GetFileName(context)</MudTd>
                                    <MudTd DataLabel="Delete">
                                        <MudButton @onclick="@(() => DeleteImageAsync(context))" Variant="Variant.Filled" Color="Color.Error">Delete</MudButton>
                                    </MudTd>
                                </RowTemplate>
                            </MudTable>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Inject]
    public HttpClient httpClient { get; set; }

    [Parameter]
    public string Code { get; set; }

    public string ImgUrl { get; set; }

    string img = string.Empty;
    string imageName = string.Empty;

    string stringImage = string.Empty;

    public List<string> filesList = new List<string>();

    string path1 = @"images/devices/";

    //Executes on page open, set defaults on page.
    protected override async Task OnInitializedAsync()
    {
        filesList = await _azureStorageService.GetContainerFileList("upload-container", Code);
        ImgUrl = @"/images/Preview.png";
    }

    private async void DeleteImageAsync(string imgName)
    {
        await _azureStorageService.DeleteFile(Path.GetFileName(imgName), Code);
        filesList = await _azureStorageService.GetContainerFileList("upload-container", Code);
        ImgUrl = @"/images/Preview.png";
        InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }


    private async Task OnInputFileChanged(InputFileChangeEventArgs e)
    {
        var fileformat = "image/png";
        var imageFile = e.File;

        if (imageFile == null)
            return;

        var resizedFile = await imageFile.RequestImageFileAsync(fileformat, 300, 500);

        using (var ms = resizedFile.OpenReadStream(resizedFile.Size))
        {
            var content = new MultipartFormDataContent();
            content.Headers.ContentDisposition =
                new ContentDispositionHeaderValue("form-data");
            content.Add(new StreamContent(ms, Convert.ToInt32(resizedFile.Size)),
                "image", imageFile.Name);
            
            ImgUrl = await _azureStorageService.FileUpload(content,Code);
            filesList = await _azureStorageService.GetContainerFileList("upload-container", Code);
        }
    }

    [Parameter]
    public string ImageDetails { get; set; }

    private async void OpenDialog(string path)
    {
        var parameters = new DialogParameters { { "ImageDetails", path } };
        DialogService.Show<ImageDialog>("Preview", parameters);
    }
}
