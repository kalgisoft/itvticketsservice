@page "/useraddeditpassword/{Id:int}"
@inject IUserInfoService _userInfoService
@inject NavigationManager NavigationManager
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-7">
            <div class="card shadow-lg border-0 rounded-lg mt-5">
                <AuthorizeView Roles="Admin">
                    <Authorized Context="ResetPassword">
                        <div class="card-header"><h3 class="text-center font-weight-light my-2">@pagetitle</h3></div>
                        <div class="card-body">
                            <EditForm Model="@resetPassword" class="form-resetpassword form-horizontal" OnValidSubmit="Save">
                                <DataAnnotationsValidator />
                                <label class="text-danger">@error</label>

                                <div class="form-group">
                                    <label class="small mb-1" for="username">User Name</label>
                                    <span id="username" class="form-control" readonly>@resetPassword.UserName</span>
                                </div>
                                <div class="form-group">
                                    <label class="small mb-1" for="userrolename">Role</label>
                                    <span id="userrolename" class="form-control" readonly>@resetPassword.UserRoleName</span>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="small mb-1" for="password">Password</label>
                                            <InputText type="password" id="password" class="form-control py-4" placeholder="Password" @bind-Value="@resetPassword.Password" />
                                            <ValidationMessage For="@(() => resetPassword.Password)" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="small mb-1" for="inputPasswordConfirm">Password Confirmation</label>
                                            <InputText type="password" id="inputPasswordConfirm" class="form-control py-4" placeholder="Password Confirmation" @bind-Value="@resetPassword.ConfirmPassword" />
                                            <ValidationMessage For="@(() => resetPassword.ConfirmPassword)" />
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group mt-4 mb-0">
                                    <button class="btn btn-primary btn-block" @onsubmit="@Save">@buttontext</button>
                                    <button class="btn btn-secondary btn-block" @onclick="@Cancel">Cancel</button>
                                </div>
                            </EditForm>
                            @code {
                                //UserInfo user = new UserInfo();
                                ResetPasswordInfo resetPassword = new ResetPasswordInfo();
                                int selRole;

                                [Parameter]
                                public int Id { get; set; }

                                // Set default page title and button text
                                public string pagetitle = "Change Password";
                                public string buttontext = "Update";

                                //Executes on page open, set defaults on page.
                                protected override async Task OnInitializedAsync()
                                {
                                    try
                                    {
                                        resetPassword = await _userInfoService.GetResetPasswordInfo(Id);
                                    }
                                    catch (Exception ex)
                                    {
                                        error = ex.Message;
                                    }
                                }

                                string error { get; set; }
                                // Executes OnValidSubmit of EditForm above.
                                protected async Task Save()
                                {
                                    try
                                    {
                                        await _userInfoService.UserInfo_ResetPassword(resetPassword);
                                        error = "Password updated successfully.";
                                        NavigationManager.NavigateTo("/userlist");
                                    }
                                    catch (Exception ex)
                                    {
                                        error = ex.Message;
                                    }
                                }

                                //Executes if user clicks the Cancel button.
                                protected void Cancel()
                                {
                                    NavigationManager.NavigateTo("/userlist");
                                }
                            }
                        </div>

                    </Authorized>
                </AuthorizeView>
                <AuthorizeView Roles="Team, Client">
                    <div class="container py-5">
                        <div class="row">
                            <div class="col-md-12">
                                <h3>Access Denied!</h3>
                                <p>You don't have access to this page<br>Please go back to the previous page to continue browsing.</p>
                                <a class="btn btn-danger" href="javascript:history.back()">Go Back</a>
                            </div>
                        </div>
                    </div>
                </AuthorizeView>
            </div>
        </div>
    </div>
</div>
